// void 타입
// void 타입은 아무런 값도 없음을 의미하는 타입
// void 타입의 변수에는 undefiend 이외의 다른 타입의 값은 담을 수 없습니다.
// 그 이유는 void 타입은 함수의 반환 타입으로 주로 사용되는데, 함수가 반환하는 값이 없을 때 사용되기 때문입니다.

// void 타입과 never 타입이 존재하는 이유는 함수의 반환 타입을 명시적으로 지정할 때, 반환하는 값이 없는 경우 void 타입을 사용하고,
// 함수가 항상 예외를 던지거나 무한 루프에 빠지는 경우 never 타입을 사용하기 위해서입니다.

// typescript의 이해
type ReturnType<T extends (...args: any) => any> = T extends (
  ...agrs: any
) => infer R
  ? R
  : never;
// 위 코드는 함수의 반환 타입을 추출하는 유틸리티 타입 ReturnType을 정의한 것입니다.
// ReturnType은 제네릭 타입 T를 확장한 타입이 함수인지 확인하고, 함수인 경우 함수의 반환 타입을 추출하여 반환합니다.
// 이때 infer 키워드를 사용하여 반환 타입을 추출합니다.
// infer 키워드는 조건부 타입에서 사용되며, 조건부 타입의 결과를 저장할 때 사용됩니다.
