'''
사용신청을 확인해 최대한 많은 화물차가 화물을 싣고 내릴 수 있도록 하면, 최대 몇 대의 화물차가 이용할 수 있는지 알아내 출력하는 프로그램
신청서에는 작업 시작 시간과 완료 시간이 매시 정각을 기준으로 표시
앞 작업의 종료와 동시에 다음 작업을 시작할 수 있다.
첫 줄에 신청서 N이 주어지고, 다음 줄부터 N개의 줄에 걸쳐 화물차의 작업 시작 시간 s와 종료 시간 e가 주어진다.

0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24
        -------------------------
                -----------------------------
                                                            ---
                                          ---------
                                                  ----------
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24
                                ----------------------------
    --------------------------------------------
  -------------------------------------------------------
                           ------------------------------------
                                                     -------
            ------------------------
                                                   ------------
  -------
            ------------------------
                                    ---
0 1 2 3 0 0 0 0 0 0 0 0 0 0 15 16 0 0 0 20 21 22 23 24
'''
import sys
sys.stdin = open('sample_input.txt')

T = int(input())
for tc in range(1,T+1):
    N = int(input())
    w_table = [list(map(int,input().split())) for _ in range(N)]
    # 종료시간이 빠른 순서대로 오름차순 정렬
    n_table = sorted(w_table, key= lambda x:x[1])
    print(n_table)
    for i in range(N):
        if n_table[-1]

    # time_table = list(range(0,25))
    # cnt = 0
    # # 종료시간이 빠른 순서대로 타임테이블을 차지(0)하고 이후에 사용자가 시간을 쓰려고 하면 break
    # for i in range(N):
    #     s,e = n_table[i]
    #     for j in range(s,e):
    #         if time_table[j] != 0:
    #             time_table[j] = 0
    #         else:
    #             cnt -= 1
    #             break
    #     cnt += 1

    print(f'#{tc} {cnt}')
